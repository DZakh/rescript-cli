// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Ava = require("ava").default;
var RescriptCliBuilder = require("../src/RescriptCliBuilder.bs.js");

Ava("registering a command", (function (t) {
        var builder = RescriptCliBuilder.make(function (ctx) {
              ctx.command("hello", "Hello");
            });
        t.deepEqual(RescriptCliBuilder.parse(builder, [
                  "hello",
                  "a",
                  "-x",
                  "23"
                ]), {
              TAG: "Ok",
              _0: [
                {
                  string: "hello",
                  parts: ["hello"],
                  tag: "Hello"
                },
                [
                  "a",
                  "-x",
                  "23"
                ]
              ]
            }, undefined);
      }));

Ava("registering two commands", (function (t) {
        var builder = RescriptCliBuilder.make(function (ctx) {
              ctx.command("hello", "Hello");
              ctx.command("world", "World");
            });
        t.deepEqual(RescriptCliBuilder.parse(builder, [
                  "world",
                  "a",
                  "-x",
                  "23"
                ]), {
              TAG: "Ok",
              _0: [
                {
                  string: "world",
                  parts: ["world"],
                  tag: "World"
                },
                [
                  "a",
                  "-x",
                  "23"
                ]
              ]
            }, undefined);
      }));

Ava("registering two commands (bis)", (function (t) {
        var builder = RescriptCliBuilder.make(function (ctx) {
              ctx.command("hello", "Hello");
              ctx.command("world", "World");
            });
        t.deepEqual(RescriptCliBuilder.parse(builder, [
                  "hello",
                  "a",
                  "-x",
                  "23"
                ]), {
              TAG: "Ok",
              _0: [
                {
                  string: "hello",
                  parts: ["hello"],
                  tag: "Hello"
                },
                [
                  "a",
                  "-x",
                  "23"
                ]
              ]
            }, undefined);
      }));

Ava("registering two words commands", (function (t) {
        var builder = RescriptCliBuilder.make(function (ctx) {
              ctx.command("hello", "Hello");
              ctx.command("hello world", "HelloWorld");
            });
        t.deepEqual(RescriptCliBuilder.parse(builder, [
                  "hello",
                  "world",
                  "a",
                  "-x",
                  "23"
                ]), {
              TAG: "Ok",
              _0: [
                {
                  string: "hello world",
                  parts: [
                    "hello",
                    "world"
                  ],
                  tag: "HelloWorld"
                },
                [
                  "a",
                  "-x",
                  "23"
                ]
              ]
            }, undefined);
      }));

Ava("registering two words commands (bis)", (function (t) {
        var builder = RescriptCliBuilder.make(function (ctx) {
              ctx.command("hello", "Hello");
              ctx.command("hello world", "HelloWorld");
            });
        t.deepEqual(RescriptCliBuilder.parse(builder, [
                  "hello",
                  "a",
                  "-x",
                  "23"
                ]), {
              TAG: "Ok",
              _0: [
                {
                  string: "hello",
                  parts: ["hello"],
                  tag: "Hello"
                },
                [
                  "a",
                  "-x",
                  "23"
                ]
              ]
            }, undefined);
      }));

Ava("registering ambiguous commands throws exception", (function (t) {
        t.throws((function () {
                RescriptCliBuilder.make(function (ctx) {
                      ctx.command("hello", "Hello");
                      ctx.command("hello world", "HelloWorld");
                      ctx.command("hello world matteo", "HelloWorldMatteo");
                      ctx.command("hello world", "HelloWorld");
                    });
              }), {
              message: "Command \"hello world\" is already registered."
            }, undefined);
      }));

/*  Not a pure module */
